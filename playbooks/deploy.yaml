- name: Deploy all services
  hosts: localhost
  connection: local
  tasks:
    - name: Check extra variables
      ansible.builtin.fail:
        msg: "{{ item }} must be present and non-empty"
      loop:
        - MATTERMOST_DATABASE_PASSWORD
        - MATTERMOST_DATABASE_INIT
        - NEXTCLOUD_DATABASE_PASSWORD
        - NEXTCLOUD_DATABASE_INIT
        - VAULTWARDEN_ADMIN_TOKEN
        - WIKI_DATABASE_PASSWORD
        - WIKI_DATABASE_INIT
        - WIKI_SECRET_KEY
        - ROBOCLIC_TOKEN
        - RALLLY_SECRET_PASSWORD
        - RALLLY_DATABASE_PASSWORD
        - RALLLY_DATABASE_INIT
        - CLICKETING_DATABASE_PASSWORD
        - CLICKETING_DATABASE_INIT
        - CLICKETING_ADMIN_TOKEN
        - BOOKSTACK_DATABASE_PASSWORD
        - BOOKSTACK_DATABASE_INIT
        - SMTP_COMMUNICATION_PASSWORD
        - SMTP_IT_PASSWORD
        - COLLABORA_ADMIN_PASSWORD
        - BACKUP_DIR
        - BACKUP_DISK
      when: value == ""
      vars:
        value: "{{ lookup('ansible.builtin.vars', item) }}"

    - name: Init Docker swarm
      community.docker.docker_swarm:
        state: present

    - name: Create docker network
      community.docker.docker_network:
        name: caddy
        scope: swarm

    - name: Deploy
      community.docker.docker_stack:
        state: present
        name: "{{ item }}"
        resolve_image: changed
        compose:
          - "../{{ item }}/docker-compose.yaml"
      loop:
        - caddy
        - mattermost
        - nextcloud
        - roboclic
        - vaultwarden
        - website
        - wiki
        - rallly
        - clicketing
        - bookstack
        - icelan
        - collabora
      environment:
        MATTERMOST_DATABASE_PASSWORD: "{{ MATTERMOST_DATABASE_PASSWORD }}"
        MATTERMOST_DATABASE_INIT: "{{ MATTERMOST_DATABASE_INIT }}"
        NEXTCLOUD_DATABASE_PASSWORD: "{{ NEXTCLOUD_DATABASE_PASSWORD }}"
        NEXTCLOUD_DATABASE_INIT: "{{ NEXTCLOUD_DATABASE_INIT }}"
        VAULTWARDEN_ADMIN_TOKEN: "{{ VAULTWARDEN_ADMIN_TOKEN }}"
        ROBOCLIC_TOKEN: "{{ ROBOCLIC_TOKEN }}"
        WIKI_DATABASE_PASSWORD: "{{ WIKI_DATABASE_PASSWORD }}"
        WIKI_DATABASE_INIT: "{{ WIKI_DATABASE_INIT }}"
        WIKI_SECRET_KEY: "{{ WIKI_SECRET_KEY }}"
        SMTP_PWD: "{{SMTP_PWD}}"
        RALLLY_SECRET_PASSWORD: "{{ RALLLY_SECRET_PASSWORD }}"
        RALLLY_DATABASE_PASSWORD: "{{ RALLLY_DATABASE_PASSWORD }}"
        RALLLY_DATABASE_INIT: "{{ RALLLY_DATABASE_INIT }}"
        CLICKETING_DATABASE_PASSWORD: "{{ CLICKETING_DATABASE_PASSWORD }}"
        CLICKETING_DATABASE_INIT: "{{ CLICKETING_DATABASE_INIT }}"
        CLICKETING_ADMIN_TOKEN: "{{ CLICKETING_ADMIN_TOKEN }}"
        BOOKSTACK_DATABASE_PASSWORD: "{{ BOOKSTACK_DATABASE_PASSWORD }}"
        BOOKSTACK_DATABASE_INIT: "{{ BOOKSTACK_DATABASE_INIT }}"
        COLLABORA_ADMIN_PASSWORD: "{{ COLLABORA_ADMIN_PASSWORD }}"
        SMTP_COMMUNICATION_PASSWORD: "{{ SMTP_COMMUNICATION_PASSWORD }}"
        SMTP_IT_PASSWORD: "{{ SMTP_IT_PASSWORD }}"

- name: Setup automatic backups with Borg
  hosts: localhost
  connection: local
  tasks:
    - name: Install required packages
      ansible.builtin.apt:
        update_cache: true
        package:
          - borgbackup
          - postgresql-client
          - mariadb-client

    - name: Mount secondary disk onto backup directory
      ansible.posix.mount:
        state: mounted
        path: "{{ BACKUP_DIR }}"
        src: "{{ BACKUP_DISK }}"
        fstype: ext4

    - name: Verify backup repository existence
      ansible.builtin.find:
        paths:
          - "{{ BACKUP_DIR }}"
      register: repo_content

    - name: Init backup repository
      ansible.builtin.command:
        argv:
          - borg
          - init
          - -e
          - none
          - "{{ BACKUP_DIR }}"
      register: repo_init
      when: repo_content.matched == 0
      changed_when: repo_init.rc == 0

    - name: Launch borgmatic
      ansible.builtin.include_role:
        name: borgbase.ansible_role_borgbackup
      vars:
        borg_repository: "{{ BACKUP_DIR }}"
        borg_encryption_passphrase: none # The variable is required, but ignored since we do not encrypt the backups
        borgmatic_timer: cron
        borgmatic_timer_hour: 0
        borgmatic_timer_minute: 0
        borg_source_directories:
          - /var/lib/docker/volumes/caddy_caddy_config
          - /var/lib/docker/volumes/caddy_data
          - /var/lib/docker/volumes/mattermost_data
          - /var/lib/docker/volumes/nextcloud_nextcloud-app
          - /var/lib/docker/volumes/vaultwarden_vaultwarden
          - /var/lib/docker/volumes/wiki_images
          - /var/lib/docker/volumes/bookstack_app
        borgmatic_hooks:
          before_backup:
            - echo "`date` - Starting backup."
          mariadb_databases:
            - name: nextcloud
              hostname: 127.0.0.1
              port: 5000
              username: nextcloud
              password: "{{ NEXTCLOUD_DATABASE_PASSWORD }}"
            - name: my_wiki
              hostname: 127.0.0.1
              port: 5002
              username: wikiuser
              password: "{{ WIKI_DATABASE_PASSWORD }}"
            - name: bookstack
              hostname: 127.0.0.1
              port: 5004
              username: bookstack
              password: "{{ BOOKSTACK_DATABASE_PASSWORD }}"
          postgresql_databases:
            - name: mattermost
              hostname: 127.0.0.1
              port: 5001
              username: mattermost
              password: "{{ MATTERMOST_DATABASE_PASSWORD }}"
            - name: clicketing
              hostname: 127.0.0.1
              port: 5003
              username: clicketing
              password: "{{ CLICKETING_DATABASE_PASSWORD }}"
            - name: rallly
              hostname: 127.0.0.1
              port: 5005
              username: rallly
              password: "{{ RALLLY_DATABASE_PASSWORD }}"
        borg_retention_policy:
          keep_daily: 3
          keep_weekly: 4
          keep_monthly: 6
